services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    networks:
      - local_network
    volumes:
      - ./mysql_data:/var/lib/mysql

  keycloak:
    image: quay.io/keycloak/keycloak:25.0
    container_name: keycloak
    restart: unless-stopped
    depends_on:
      - mysql
    environment:
      KC_HOSTNAME: ${KC_HOSTNAME}
      KC_HOSTNAME_PORT: 8080
      KC_HOSTNAME_STRICT_BACKCHANNEL: true
      KC_HOSTNAME_STRICT: false
      KC_PROXY: edge
      KC_HTTP_ENABLED: true
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      # KC_HEALTH_ENABLED: true
      KC_LOG_LEVEL: info
      KC_DB: ${KC_DB}
      KC_DB_URL: ${KC_DB_URL}
      KC_DB_USERNAME: ${KC_DB_USERNAME}
      KC_DB_PASSWORD: ${KC_DB_PASSWORD}
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
    #   interval: 15s
    #   timeout: 2s
    #   retries: 15
    command: ["start", "--http-port", "8080"]
    ports:
      - "8080:8080"
    networks:
      - local_network
    volumes:
      - ./keycloak_data:/opt/keycloak/data

  nginx:
    image: nginx:1.27.2
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    networks:
      - local_network
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/nginx/certs:ro
    depends_on:
      - keycloak

networks:
  local_network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
